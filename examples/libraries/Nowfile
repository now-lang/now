[Supervisor Example]

Runs a child process and communicate with it in a
efficient manner.

[libraries/test_lib]
command {
    - "$script_dir/library.sh"
    - {
        arg1 "argument-one"
    }
}

[procedures/sum]
parameters {
    a {
        type integer
    }
    b {
        type integer
    }
}

print "sum:"
print "$a $b"
return ([to.integer $a] + [to.integer $b])

[commands/run]
description "Call some procedures from external library."

test_lib start 1 (2 = 3) [dict (4 = 5) (6 = 7)] [list 8 9 10] | print "response:"
test_lib err
    ! self_inflicted_error { print "Error (as expected): $error" }

print "Proceeding..."

# The library is going to call a procedure from this document:
test_lib test_calls 1 2 | :: eq 3 | :: assert

[commands/ue]

log "START"
test_lib unhandled_error
    ! * {log "error>>> $error"}
test_lib test_calls 3 4 | :: eq 7 | :: assert
log "FINISH"

[YAML Reader and Writer]

Implement basic reading from and writing to YAML strings.

[procedures/nest]
parameters {
    what {
        type any
    }
    nesting_level {
        type integer
    }
}

range ($nesting_level * 4)
    | { return " " } | collect
    : push $what
    : join
    | return


[procedures/to.yaml]
parameters {
    node {
        type any
    }
    nesting_level {
        type integer
        default 0
    }
}

type $node | as t

when (($t == integer) || ($t == float)) {
    nest $node $nesting_level
}
when ($t == string) {
    nest '"$node"' $nesting_level
}
when ($t == dict) {
    obj $node : keys | foreach key {
        obj $node : get $key | as value
        nest "${key}: $value" $nesting_level
        to.yaml ($node . $key) ($nesting_level + 1)
    }
}
default {
    return "unknown type: $node ($t)"
}


[commands/run]

dict (a = [
    dict (b = [
        dict (c = [
            dict (d = (1 , 2 , 3 , 4))
        ])
    ])
]) (e = 2) | to.yaml | print

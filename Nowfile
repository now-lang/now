[Nowfile for the Now project]

[constants/dub]
name "now"
description "Auxiliary tool for software projects in general"
authors {
    - "ClÃ©ber Zavadniak"
}
homepage "https://now-run.org"
license "MIT"
"targetType" executable
"sourcePaths" {
    - "cli"
    - "source"
}
"targetPath" "dist"
"postBuildCommands" {
    - "strip dist/now"
}


[on.error]

print "The program terminated with some error."
return $error


[logging/formats/default]
description "This section defines how the `log` command will behave"

dict (timestamp = [unixtime]) (message = $message) | json.encode | return


[system_commands/dub]
command {
    - dub
}
which {
    - dub
    - -h
}


[system_commands/make]
parameters {
    target {
        type string
    }
}
command {
    - "now"
    - ":f"
    - "examples/make/Nowfile"
    - "build"
    - $target
}


[commands/make]
description "Compiles Now"
parameters {
    target {
        type string
        default "release"
        choices {
            - "release"
            - "debug"
        }
    }
}

make $target | foreach line {
    print "> $line"
}


[commands/run]
description "Show some help text."

print.yellow "Try running `now` without any arguments to see"
print.yellow "a list of available subcommands for this project."


[commands/test]
description "Run all the examples."

try {
    path "examples" : glob "*" | foreach directory {
        print $directory
        val test : get ignore : contains ($directory : basename) : then {
            print "skipping $directory"
            continue
        }
        print "Testing ${directory}..."
        now "$directory" : check
    }
}

[commands/dub]
description "Generate dub.json file"

path "dub.json" : write [json.encode $dub]
